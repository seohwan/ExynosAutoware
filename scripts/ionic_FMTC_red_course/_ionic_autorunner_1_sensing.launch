<launch>
  <rosparam command="load" file="$(env USER_HOME)/rubis_ws/src/rubis_autorunner/cfg/ionic_autorunner/ionic_autorunner_params.yaml" />

  <arg name="lidar_input_topic" default="/points_raw"/>
  <arg name="lidar_output_topic" default="/points_raw"/>

  <!-- Map TF Publisher -->	
	<include file="$(env USER_HOME)/autoware.ai/autoware_files/data/tf/tf.launch" />
  
  <!-- Vector Map Loader -->
	<node pkg="map_file" type="vector_map_loader" name="vector_map_loader" args="
	    $(env USER_HOME)/autoware.ai/autoware_files/vector_map/221104_FMTC_red_course_circle_v1/dtlane.csv 
	    $(env USER_HOME)/autoware.ai/autoware_files/vector_map/221104_FMTC_red_course_circle_v1/idx.csv 
	    $(env USER_HOME)/autoware.ai/autoware_files/vector_map/221104_FMTC_red_course_circle_v1/lane.csv 
	    $(env USER_HOME)/autoware.ai/autoware_files/vector_map/221104_FMTC_red_course_circle_v1/node.csv 
	    $(env USER_HOME)/autoware.ai/autoware_files/vector_map/221104_FMTC_red_course_circle_v1/point.csv"/>

  <!-- Point Map Loader -->
	<include file="$(find map_file)/launch/points_map_loader.launch">
    <arg name="scene_num" value="noupdate" />
    <arg name="path_pcd" value="$(env USER_HOME)/autoware.ai/autoware_files/points_map/FMTC_MobileTech_0.05.pcd"/>
  </include>  

  <!-- Vision Sensor -->
  <include file="$(find camera_image)/launch/camera_image.launch"/>

<!-- Lidar Launch File -->
  <include file="$(find runtime_manager)/launch_files/rubis_velodyne_vlp16_hires_FR.launch" />
  
<!-- TF -->
  <!-- right LiDAR -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="3.3 -0.8 0.09 -0.68 0 0 base_link velodyne 10"/>

  <!-- left LiDAR -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="3.3 0.8 0.09 0.68 0 0 base_link velodyne 10"/> -->

  <!--Back LiDAR -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="-0.78 -0.3 0.36 3.14 0 0 base_link velodyne 10"/> -->
  
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_gnss" args="-0.165 0.285 0.00 0.0 0 0 base_link gnss 10"/>
  <!-- <node pkg="tf" type="static_transform_publisher" name="lidar_to_camera" args="0.029 -0.574 -1.820 4.712 0.009 -1.883 velodyne camera 10" /> -->

  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="0 0 0 0 0 0 base_link camera 10"/>

  <!-- CAN Interface -->
  <include file="$(find can_translate)/launch/can_translate.launch" />

  <!-- INS-D Sensor -->
  <!-- <include file="$(find inertiallabs_ins)/launch/ins.launch" />   -->
  
  <!-- INS twist generator -->
  <include file="$(find ins_twist_generator)/launch/ins_twist_generator.launch">
    <arg name="yaw_offset" value="-64.569" />
  </include>

  <include file="$(find rubis_pkg)/launch/lidar_republisher_params.launch">
    <arg name="input_topic" value="$(arg lidar_input_topic)" />
    <arg name="output_topic" value="$(arg lidar_output_topic)" />
  </include>

  <!-- <include file="$(find ins_twist_generator)/launch/dynamic_ins_twist_generator.launch">
    <arg name="yaw_offset" value="-72.7014" />
    <arg name="yaw_diff_threshold" value="2.0" />
  </include> -->

</launch>

